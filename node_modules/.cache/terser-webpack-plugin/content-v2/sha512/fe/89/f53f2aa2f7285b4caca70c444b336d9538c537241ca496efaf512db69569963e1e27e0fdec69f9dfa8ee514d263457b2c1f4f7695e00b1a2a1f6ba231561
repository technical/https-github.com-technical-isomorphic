{"map":"{\"version\":3,\"sources\":[\"/Users/marklewis/Development/Isomorphic/isomorphic/src/components/uielements/upload.js\",\"/Users/marklewis/Development/Isomorphic/isomorphic/src/components/contacts/deleteButton.js\",\"/Users/marklewis/Development/Isomorphic/isomorphic/src/components/contacts/contactList.style.js\",\"/Users/marklewis/Development/Isomorphic/isomorphic/src/components/contacts/contactList.js\",\"/Users/marklewis/Development/Isomorphic/isomorphic/src/components/contacts/contactCard.style.js\",\"/Users/marklewis/Development/Isomorphic/isomorphic/src/components/contacts/singleView.js\",\"/Users/marklewis/Development/Isomorphic/isomorphic/src/components/contacts/editView.js\",\"/Users/marklewis/Development/Isomorphic/isomorphic/src/containers/Contacts/contacts.style.js\",\"/Users/marklewis/Development/Isomorphic/isomorphic/src/containers/Contacts/index.js\"],\"names\":[\"antd__WEBPACK_IMPORTED_MODULE_0__\",\"__webpack_require__\",\"Upload\",\"_this$props\",\"this\",\"props\",\"contact\",\"deleteContact\",\"name\",\"firstName\",\"concat\",\"lastName\",\"react_default\",\"a\",\"createElement\",\"popconfirm\",\"title\",\"okText\",\"cancelText\",\"onConfirm\",\"notification\",\"id\",\"uielements_button\",\"icon\",\"type\",\"className\",\"Component\",\"WDContactListWrapper\",\"styled\",\"div\",\"_templateObject\",\"palette\",\"boxShadow\",\"borderRadius\",\"transition\",\"ContactListWrapper\",\"WithDirection\",\"ContactList\",\"_this\",\"Object\",\"classCallCheck\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"singleContact\",\"bind\",\"assertThisInitialized\",\"onChange\",\"state\",\"search\",\"seectedId\",\"changeContact\",\"activeClass\",\"key\",\"onClick\",\"avatar\",\"alt\",\"src\",\"deleteButton_default\",\"event\",\"setState\",\"target\",\"value\",\"_this2\",\"contacts\",\"toUpperCase\",\"filter\",\"includes\",\"filterContacts\",\"input\",\"placeholder\",\"context\",\"intl\",\"formatMessage\",\"length\",\"customScrollBar\",\"map\",\"intlMessages\",\"contextTypes\",\"PropTypes\",\"object\",\"isRequired\",\"WDContactCardWrapper\",\"contactCard_style_templateObject\",\"ContactCardWrapper\",\"otherAttributes\",\"extraInfos\",\"forEach\",\"attribute\",\"push\",\"beforeUpload\",\"file\",\"size\",\"toConsumableArray\",\"editContact\",\"rows\",\"upload\",\"showUploadList\",\"action\",\"WDContactsWrapper\",\"contacts_style_templateObject\",\"ContactsWrapper\",\"contactAction\",\"addContact\",\"viewChange\",\"Content\",\"Layout\",\"Contacts\",\"editView\",\"selectedContact\",\"style\",\"background\",\"contactList_ContactList\",\"layout\",\"editView_default\",\"singleView_default\",\"connect\",\"_state$Contacts\"],\"mappings\":\"4FAAA,IAAAA,EAAAC,EAAA,MAEeC,EAAAA,EAAAA,EAAf,wYCIW,IAAAC,EAC4BC,KAAKC,MAAhCC,EADDH,EACCG,QAASC,EADVJ,EACUI,cACbC,EAAO,GAUX,OATIF,EAAQG,YACVD,EAAI,GAAAE,OAAMJ,EAAQG,UAAd,MAEFH,EAAQK,WACVH,EAAI,GAAAE,OAAMF,GAANE,OAAaJ,EAAQK,WAEtBH,IACHA,EAAO,WAGPI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,MAAK,kBAAAN,OAAoBF,EAApB,KACLS,OAAO,SACPC,WAAW,KACXC,UAAW,WACTC,OAAAA,EAAAA,EAAAA,CAAa,QAAD,GAAAV,OAAaF,EAAb,YAA6B,IACzCD,EAAcD,EAAQe,MAGxBT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAQC,KAAK,QAAQC,KAAK,SAASC,UAAU,yBAvBxBC,EAAAA,8hHCA7B,IAAMC,EAAuBC,EAAAA,EAAOC,IAAVC,IASbC,OAAAA,EAAAA,QAAAA,CAAQ,YAAa,GAUnBA,OAAAA,EAAAA,QAAAA,CAAQ,OAAQ,GAIT,SAAA1B,GAAK,MACG,QAAtBA,EAAM,YAAwB,UAAY,QAC3B,SAAAA,GAAK,MACE,QAAtBA,EAAM,YAAwB,OAAS,WAEd0B,OAAAA,EAAAA,QAAAA,CAAQ,SAAU,GAI3CC,OAAAA,EAAAA,EAAAA,CAAU,QACVC,OAAAA,EAAAA,EAAAA,GACAC,OAAAA,EAAAA,EAAAA,GAQgBH,OAAAA,EAAAA,QAAAA,CAAQ,SAAU,GAIzBA,OAAAA,EAAAA,QAAAA,CAAQ,YAAa,GAIrBA,OAAAA,EAAAA,QAAAA,CAAQ,YAAa,GAIrBA,OAAAA,EAAAA,QAAAA,CAAQ,YAAa,GAGrBA,OAAAA,EAAAA,QAAAA,CAAQ,YAAa,GAQzBA,OAAAA,EAAAA,QAAAA,CAAQ,YAAa,GA2BX,SAAA1B,GAAK,MACE,QAAtBA,EAAM,YAAwB,OAAS,QACzB,SAAAA,GAAK,MAA2B,QAAtBA,EAAM,YAAwB,OAAS,QACtC0B,OAAAA,EAAAA,QAAAA,CAAQ,SAAU,GAC/B,SAAA1B,GAAK,MAA2B,QAAtBA,EAAM,YAAwB,QAAU,QAK1C0B,OAAAA,EAAAA,QAAAA,CAAQ,YAAa,GAazB,SAAA1B,GAAK,MACG,QAAtBA,EAAM,YAAwB,UAAY,QAC7B,SAAAA,GAAK,MACI,QAAtBA,EAAM,YAAwB,OAAS,WAGvC4B,OAAAA,EAAAA,EAAAA,CAAa,OAiBC,SAAA5B,GAAK,MACG,QAAtBA,EAAM,YAAwB,UAAY,QAC7B,SAAAA,GAAK,MACI,QAAtBA,EAAM,YAAwB,OAAS,WAS9B0B,OAAAA,EAAAA,QAAAA,CAAQ,YAAa,GAMrBA,OAAAA,EAAAA,QAAAA,CAAQ,YAAa,GAWvB,SAAA1B,GAAK,MAA2B,QAAtBA,EAAM,YAAwB,UAAY,OACrD,SAAAA,GAAK,MAA2B,QAAtBA,EAAM,YAAwB,MAAQ,WAI/C0B,OAAAA,EAAAA,QAAAA,CAAQ,YAAa,GAC5BG,OAAAA,EAAAA,EAAAA,GAGSH,OAAAA,EAAAA,QAAAA,CAAQ,UAAW,GAQvBA,OAAAA,EAAAA,QAAAA,CAAQ,YAAa,IAO9BI,EAAqBC,OAAAA,EAAAA,EAAAA,CAAcT,gBCpLpBU,cACnB,SAAAA,EAAYhC,GAAO,IAAAiC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAnC,KAAAiC,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAnC,KAAAmC,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAvC,KAAMC,KACDuC,cAAgBN,EAAKM,cAAcC,KAAnBN,OAAAO,EAAA,EAAAP,CAAAA,OAAAO,EAAA,EAAAP,CAAAD,KACrBA,EAAKS,SAAWT,EAAKS,SAASF,KAAdN,OAAAO,EAAA,EAAAP,CAAAA,OAAAO,EAAA,EAAAP,CAAAD,KAChBA,EAAKU,MAAQ,CACXC,OAAQ,IALOX,6EAQLhC,GAAS,IAAAH,EAC+BC,KAAKC,MAAjD6C,EADa/C,EACb+C,UAAW3C,EADEJ,EACFI,cAAe4C,EADbhD,EACagD,cAC5BC,EAAcF,IAAc5C,EAAQe,GAAK,SAAW,GAE1D,OACET,EAAAC,EAAAC,cAAA,MAAA,CACEuC,IAAK/C,EAAQe,GACbI,UAAS,GAAAf,OAAK0C,EAAL,qBACTE,QALa,WAAA,OAAMH,EAAc7C,EAAQe,MAOzCT,EAAAC,EAAAC,cAAA,MAAA,CAAKW,UAAU,aACZnB,EAAQiD,OAAS3C,EAAAC,EAAAC,cAAA,MAAA,CAAK0C,IAAI,IAAIC,IAAKnD,EAAQiD,SAAa,IAE3D3C,EAAAC,EAAAC,cAAA,MAAA,CAAKW,UAAU,kBACbb,EAAAC,EAAAC,cAAA,KAAA,KAAKR,EAAQE,KAAOF,EAAQE,KAAO,YAErCI,EAAAC,EAAAC,cAAC4C,EAAD,CAAcnD,cAAeA,EAAeD,QAASA,sCAIlDqD,GACPvD,KAAKwD,SAAS,CAAEX,OAAQU,EAAME,OAAOC,yCAE9B,IAAAC,EAAA3D,KACC6C,EAAW7C,KAAK4C,MAAhBC,OACFe,EAzCV,SAAwBA,EAAUf,GAEhC,OADAA,EAASA,EAAOgB,eAEZD,EAASE,OAAO,SAAA5D,GAAO,OAAIA,EAAQE,KAAKyD,cAAcE,SAASlB,KAC/De,EAqCeI,CAAehE,KAAKC,MAAM2D,SAAUf,GACrD,OACErC,EAAAC,EAAAC,cAACqB,EAAD,CAAoBV,UAAU,yBAC5Bb,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CACEC,YAAalE,KAAKmE,QAAQC,KAAKC,cAAc,CAC3CpD,GAAI,+BAENyC,MAAOb,EACPF,SAAU3C,KAAK2C,SACftB,UAAU,iBAEXuC,GAAYA,EAASU,OAAS,EAC7B9D,EAAAC,EAAAC,cAAA,MAAA,CAAKW,UAAU,kBACbb,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAWlD,UAAU,wBAClBuC,EAASY,IAAI,SAAAtE,GAAO,OAAIyD,EAAKnB,cAActC,OAIhDM,EAAAC,EAAAC,cAAA,OAAA,CAAMW,UAAU,kBACbb,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAcxD,GAAG,yCArDWK,EAAAA,gzIA6DzCW,EAAYyC,aAAe,CACzBN,KAAMO,EAAAA,UAAUC,OAAOC,YCxEzB,IAAMC,EAAuBtD,EAAAA,EAAOC,IAAVsD,IA0BN,SAAA9E,GAAK,MACG,QAAtBA,EAAM,YAAwB,UAAY,QAC7B,SAAAA,GAAK,MAA2B,QAAtBA,EAAM,YAAwB,OAAS,WAoB5D4B,OAAAA,EAAAA,EAAAA,CAAa,OAiBNF,OAAAA,EAAAA,QAAAA,CAAQ,OAAQ,GA+BdA,OAAAA,EAAAA,QAAAA,CAAQ,OAAQ,GAGT,SAAA1B,GAAK,MACG,QAAtBA,EAAM,YAAwB,UAAY,QAC7B,SAAAA,GAAK,MACI,QAAtBA,EAAM,YAAwB,OAAS,WAC3B,SAAAA,GAAK,MACK,QAAtBA,EAAM,YAAwB,QAAU,QAMxB,SAAAA,GAAK,MACG,QAAtBA,EAAM,YAAwB,UAAY,KAC7B,SAAAA,GAAK,MACI,QAAtBA,EAAM,YAAwB,IAAM,WACrB,SAAAA,GAAK,MACE,QAAtBA,EAAM,YAAwB,UAAY,QAC5B,SAAAA,GAAK,MACG,QAAtBA,EAAM,YAAwB,OAAS,WAOhC,SAAAA,GAAK,MAA2B,QAAtBA,EAAM,YAAwB,UAAY,KACrD,SAAAA,GAAK,MAA2B,QAAtBA,EAAM,YAAwB,IAAM,WAO/C0B,OAAAA,EAAAA,QAAAA,CAAQ,OAAQ,GAGX,SAAA1B,GAAK,MACK,QAAtBA,EAAM,YAAwB,QAAU,QAMjC0B,OAAAA,EAAAA,QAAAA,CAAQ,OAAQ,GAKLA,OAAAA,EAAAA,QAAAA,CAAQ,SAAU,GAIpCC,OAAAA,EAAAA,EAAAA,CAAU,QACVC,OAAAA,EAAAA,EAAAA,CAAa,OACbC,OAAAA,EAAAA,EAAAA,GAGgBH,OAAAA,EAAAA,QAAAA,CAAQ,UAAW,GACjCC,OAAAA,EAAAA,EAAAA,CAAU,qCAKID,OAAAA,EAAAA,QAAAA,CAAQ,UAAW,GAI1BA,OAAAA,EAAAA,QAAAA,CAAQ,YAAa,GAIrBA,OAAAA,EAAAA,QAAAA,CAAQ,YAAa,GAIrBA,OAAAA,EAAAA,QAAAA,CAAQ,YAAa,GAGrBA,OAAAA,EAAAA,QAAAA,CAAQ,YAAa,GAOvBA,OAAAA,EAAAA,QAAAA,CAAQ,OAAQ,GAKLA,OAAAA,EAAAA,QAAAA,CAAQ,SAAU,GAGpCC,OAAAA,EAAAA,EAAAA,CAAU,QACVC,OAAAA,EAAAA,EAAAA,CAAa,OACbC,OAAAA,EAAAA,EAAAA,GAGgBH,OAAAA,EAAAA,QAAAA,CAAQ,UAAW,GACjCC,OAAAA,EAAAA,EAAAA,CAAU,qCAKID,OAAAA,EAAAA,QAAAA,CAAQ,UAAW,GAI1BA,OAAAA,EAAAA,QAAAA,CAAQ,YAAa,GAIrBA,OAAAA,EAAAA,QAAAA,CAAQ,YAAa,GAIrBA,OAAAA,EAAAA,QAAAA,CAAQ,YAAa,GAGrBA,OAAAA,EAAAA,QAAAA,CAAQ,YAAa,IAOlCqD,EAAqBhD,OAAAA,EAAAA,EAAAA,CAAc8C,sLClO9B,IAAA/E,EAC8BC,KAAKC,MAAlCC,EADDH,EACCG,QAAS+E,EADVlF,EACUkF,gBACX7E,EAAOF,EAAQE,KAAOF,EAAQE,KAAO,UACrC8E,EAAa,GAYnB,OAXAD,EAAgBE,QAAQ,SAAAC,GACtB,IAAM1B,EAAQxD,EAAQkF,EAAU1B,OAC5BA,GACFwB,EAAWG,KACT7E,EAAAC,EAAAC,cAAA,MAAA,CAAKW,UAAU,sBAAsB4B,IAAKmC,EAAU1B,OAClDlD,EAAAC,EAAAC,cAAA,IAAA,CAAGW,UAAU,gBAAb,GAAAf,OAAgC8E,EAAUxE,QAC1CJ,EAAAC,EAAAC,cAAA,IAAA,CAAGW,UAAU,kBAAkBqC,OAMrClD,EAAAC,EAAAC,cAACsE,EAAD,CAAoB3D,UAAU,kBAC5Bb,EAAAC,EAAAC,cAAA,MAAA,CAAKW,UAAU,sBACbb,EAAAC,EAAAC,cAAA,MAAA,CAAKW,UAAU,kBACZnB,EAAQiD,OAAS3C,EAAAC,EAAAC,cAAA,MAAA,CAAK0C,IAAI,IAAIC,IAAKnD,EAAQiD,SAAa,IAE3D3C,EAAAC,EAAAC,cAAA,KAAA,CAAIW,UAAU,iBAAiBjB,IAEjCI,EAAAC,EAAAC,cAAA,MAAA,CAAKW,UAAU,yBAAyB6D,WAxBnB5D,EAAAA,qCCK7B,SAASgE,EAAaC,GAEpB,MAD4B,eAAdA,EAAKnE,KAKJmE,EAAKC,KAAO,KAAO,KAAO,GAKzCxE,OAAAA,EAAAA,EAAAA,CAAa,UAAW,+BAAgC,KACjD,IAJLA,OAAAA,EAAAA,EAAAA,CAAa,QAAS,+BAAgC,KAC/C,IANPA,OAAAA,EAAAA,EAAAA,CAAa,QAAS,gCAAiC,KAChD,0LAWA,IAAAkB,EAAAlC,KAAAD,EAC8BC,KAAKC,MAAlCC,EADDH,EACCG,QAAS+E,EADVlF,EACUkF,gBACX7E,EAAOF,EAAQE,KAAOF,EAAQE,KAAO,UACrC8E,EAAa,GA6CnB,MA5Cc,CACZ,CAAExB,MAAO,YAAa9C,MAAO,cAC7B,CAAE8C,MAAO,WAAY9C,MAAO,cAE9BN,OAAA6B,OAAAsD,EAAA,EAAAtD,CAAc8C,IAAiBE,QAAQ,SAAAC,GACrC,IAAM1B,EAAQxD,EAAQkF,EAAU1B,OAC1BgC,EAAc,SAAAnC,GAClBrD,EAAQkF,EAAU1B,OAASH,EAAME,OAAOC,MACxC,IAAItD,EAAO,GACPF,EAAQG,YACVD,EAAI,GAAAE,OAAMJ,EAAQG,UAAd,MAEFH,EAAQK,WACVH,EAAI,GAAAE,OAAMF,GAANE,OAAaJ,EAAQK,WAE3BL,EAAQE,KAAOA,EACf8B,EAAKjC,MAAMyF,YAAYxF,IAED,SAApBkF,EAAU1B,MACZwB,EAAWG,KACT7E,EAAAC,EAAAC,cAAA,MAAA,CAAKW,UAAU,sBAAsB4B,IAAKmC,EAAU1B,OAClDlD,EAAAC,EAAAC,cAAA,IAAA,CAAGW,UAAU,gBAAb,GAAAf,OAAgC8E,EAAUxE,QAC1CJ,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CACEC,YAAW,GAAA5D,OAAK8E,EAAUxE,OAC1B8C,MAAOA,EACPtC,KAAK,WACLuE,KAAM,EACNhD,SAAU,SAAAY,GAAK,OAAImC,EAAYnC,QAKrC2B,EAAWG,KACT7E,EAAAC,EAAAC,cAAA,MAAA,CAAKW,UAAU,sBAAsB4B,IAAKmC,EAAU1B,OAClDlD,EAAAC,EAAAC,cAAA,IAAA,CAAGW,UAAU,gBAAb,GAAAf,OAAgC8E,EAAUxE,QAC1CJ,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CACEC,YAAW,GAAA5D,OAAK8E,EAAUxE,OAC1B8C,MAAOA,EACPf,SAAU,SAAAY,GAAK,OAAImC,EAAYnC,UAOvC/C,EAAAC,EAAAC,cAACsE,EAAD,CAAoB3D,UAAU,kBAC5Bb,EAAAC,EAAAC,cAAA,MAAA,CAAKW,UAAU,sBACbb,EAAAC,EAAAC,cAAA,MAAA,CAAKW,UAAU,kBACbb,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CACEvE,UAAU,kBACVjB,KAAK,SACLyF,gBAAgB,EAChBP,aAAcA,EACdQ,OAAO,IAEN5F,EAAQiD,OACP3C,EAAAC,EAAAC,cAAA,MAAA,CAAK2C,IAAKnD,EAAQiD,OAAQC,IAAI,GAAG/B,UAAU,WAE3C,GAEFb,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,KAAK,OAAOC,UAAU,8BAGhCb,EAAAC,EAAAC,cAAA,KAAA,CAAIW,UAAU,iBAAiBjB,IAEjCI,EAAAC,EAAAC,cAAA,MAAA,CAAKW,UAAU,yBAAyB6D,WAtEnB5D,EAAAA,mzFCjB7B,IAAMyE,EAAoBvE,EAAAA,EAAOC,IAAVuE,IAGnB,GAeoBrE,OAAAA,EAAAA,QAAAA,CAAQ,SAAU,GAwBlBA,OAAAA,EAAAA,QAAAA,CAAQ,SAAU,GACvB,SAAA1B,GAAK,MAA2B,QAAtBA,EAAM,YAAwB,UAAY,KACnD,SAAAA,GAAK,MAA2B,QAAtBA,EAAM,YAAwB,IAAM,WA2BjD0B,OAAAA,EAAAA,QAAAA,CAAQ,YAAa,GAUVA,OAAAA,EAAAA,QAAAA,CAAQ,SAAU,GACvB,SAAA1B,GAAK,MACI,QAAtBA,EAAM,YAAwB,UAAY,QAC5B,SAAAA,GAAK,MACG,QAAtBA,EAAM,YAAwB,OAAS,WAEvC4B,OAAAA,EAAAA,EAAAA,GACAC,OAAAA,EAAAA,EAAAA,GAWe,SAAA7B,GAAK,MACI,QAAtBA,EAAM,YAAwB,UAAY,KAC5B,SAAAA,GAAK,MACG,QAAtBA,EAAM,YAAwB,IAAM,WAI7B0B,OAAAA,EAAAA,QAAAA,CAAQ,UAAW,GACRA,OAAAA,EAAAA,QAAAA,CAAQ,YAAa,GAKvBA,OAAAA,EAAAA,QAAAA,CAAQ,UAAW,GAIxB,SAAA1B,GAAK,MACI,QAAtBA,EAAM,YAAwB,UAAY,QAC5B,SAAAA,GAAK,MACG,QAAtBA,EAAM,YAAwB,OAAS,WACvC4B,OAAAA,EAAAA,EAAAA,CAAa,OACbC,OAAAA,EAAAA,EAAAA,GAWoBH,OAAAA,EAAAA,QAAAA,CAAQ,UAAW,IAO3CsE,EAAkBjE,OAAAA,EAAAA,EAAAA,CAAc+D,GCjIpChD,EAKEmD,EAAAA,EALFnD,cACAoD,EAIED,EAAAA,EAJFC,WACAT,EAGEQ,EAAAA,EAHFR,YACAvF,EAEE+F,EAAAA,EAFF/F,cACAiG,EACEF,EAAAA,EADFE,WAGMC,EAAYC,EAAAA,EAAZD,QACFE,mLACK,IAAAxG,EAUHC,KAAKC,MARP2D,EAFK7D,EAEL6D,SACAd,EAHK/C,EAGL+C,UACA0D,EAJKzG,EAILyG,SACAzD,EALKhD,EAKLgD,cACAoD,EANKpG,EAMLoG,WACAT,EAPK3F,EAOL2F,YACAvF,EARKJ,EAQLI,cACAiG,EATKrG,EASLqG,WAEIK,EAAkB3D,EACpBc,EAASE,OAAO,SAAA5D,GAAO,OAAIA,EAAQe,KAAO6B,IAAW,GACrD,KAEJ,OACEtC,EAAAC,EAAAC,cAACuF,EAAD,CACE5E,UAAU,qBACVqF,MAAO,CAAEC,WAAY,SAErBnG,EAAAC,EAAAC,cAAA,MAAA,CAAKW,UAAU,qBACbb,EAAAC,EAAAC,cAACkG,EAAD,CACEhD,SAAUA,EACVd,UAAWA,EACXC,cAAeA,EACf5C,cAAeA,KAGnBK,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAQxF,UAAU,wBACfoF,EACCjG,EAAAC,EAAAC,cAAC2F,EAAD,CAAShF,UAAU,iBACjBb,EAAAC,EAAAC,cAAA,MAAA,CAAKW,UAAU,qBACbb,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAQE,KAAK,SAAS8B,QAlBb,WAAA,OAAMkD,GAAYI,KAmBxBA,EAAWhG,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,KAAK,UAAaZ,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,KAAK,SAAW,KAE5DZ,EAAAC,EAAAC,cAAC4C,EAAD,CACEnD,cAAeA,EACfD,QAASuG,IAEXjG,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEE,KAAK,UACL8B,QAASiD,EACT9E,UAAU,oBAEVb,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAcxD,GAAG,gCAIrBT,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAWlD,UAAU,uBAClBmF,EACChG,EAAAC,EAAAC,cAACoG,EAAD,CACE5G,QAASuG,EACTf,YAAaA,EACbT,gBAAiBA,EAAAA,IAGnBzE,EAAAC,EAAAC,cAACqG,EAAD,CACE7G,QAASuG,EACTxB,gBAAiBA,EAAAA,MAMzBzE,EAAAC,EAAAC,cAAA,MAAA,CAAKW,UAAU,qBACbb,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEE,KAAK,UACL8B,QAASiD,EACT9E,UAAU,oBAEVb,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAcxD,GAAG,yCAvEVK,EAAAA,WAyFR0F,EAAAA,QAAAA,OAAAA,EAAAA,EAAAA,CARf,SAAyBpE,GAAO,IAAAqE,EACYrE,EAAM2D,SAChD,MAAO,CACL3C,SAH4BqD,EACtBrD,SAGNd,UAJ4BmE,EACZnE,UAIhB0D,SAL4BS,EACDT,WAOS,CACtCzD,cAAAA,EACAoD,WAAAA,EACAT,YAAAA,EACAvF,cAAAA,EACAiG,WAAAA,GALaY,CAMZT\",\"sourcesContent\":[\"import { Upload } from 'antd';\\n\\nexport default Upload;\",\"import React, { Component } from 'react';\\nimport Popconfirm from '../feedback/popconfirm';\\nimport Button from '../uielements/button';\\nimport notification from '../notification';\\n\\nexport default class extends Component {\\n  render() {\\n    const { contact, deleteContact } = this.props;\\n    let name = '';\\n    if (contact.firstName) {\\n      name = `${contact.firstName} `;\\n    }\\n    if (contact.lastName) {\\n      name = `${name}${contact.lastName}`;\\n    }\\n    if (!name) {\\n      name = 'No Name';\\n    }\\n    return (\\n      <Popconfirm\\n        title={`Sure to delete ${name}?`}\\n        okText=\\\"DELETE\\\"\\n        cancelText=\\\"No\\\"\\n        onConfirm={() => {\\n          notification('error', `${name} Deleted`, '');\\n          deleteContact(contact.id);\\n        }}\\n      >\\n        <Button icon=\\\"close\\\" type=\\\"button\\\" className=\\\"isoDeleteBtn\\\" />\\n      </Popconfirm>\\n    );\\n  }\\n}\\n\",\"import styled from 'styled-components';\\nimport { palette } from 'styled-theme';\\nimport { transition, borderRadius, boxShadow } from '../../settings/style-util';\\nimport WithDirection from '../../settings/withDirection';\\n\\nconst WDContactListWrapper = styled.div`\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%;\\n\\n  .isoNoResultMsg {\\n    padding: 15px 20px;\\n    text-align: center;\\n    color: ${palette('secondary', 2)};\\n    font-weight: 500;\\n    font-size: 14px;\\n  }\\n\\n  .isoSearchBar {\\n    .ant-input {\\n      width: 100%;\\n      font-size: 14px;\\n      font-weight: 400;\\n      color: ${palette('text', 0)};\\n      line-height: inherit;\\n      height: 69px;\\n      padding: 0 20px;\\n      padding-left: ${props =>\\n        props['data-rtl'] === 'rtl' ? 'inherit' : '35px'};\\n      padding-right: ${props =>\\n        props['data-rtl'] === 'rtl' ? '35px' : 'inherit'};\\n      border: 0;\\n      border-bottom: 1px solid ${palette('border', 0)};\\n      outline: 0 !important;\\n      overflow: hidden;\\n      background-color: #ffffff;\\n      ${boxShadow('none')};\\n      ${borderRadius()};\\n      ${transition()};\\n\\n      @media only screen and (max-width: 767px) {\\n        height: 50px;\\n      }\\n\\n      &:hover,\\n      &:focus {\\n        border-color: ${palette('border', 0)} !important;\\n      }\\n\\n      &::-webkit-input-placeholder {\\n        color: ${palette('grayscale', 0)};\\n      }\\n\\n      &:-moz-placeholder {\\n        color: ${palette('grayscale', 0)};\\n      }\\n\\n      &::-moz-placeholder {\\n        color: ${palette('grayscale', 0)};\\n      }\\n      &:-ms-input-placeholder {\\n        color: ${palette('grayscale', 0)};\\n      }\\n    }\\n  }\\n\\n  .ant-input-suffix {\\n    left: 10px;\\n    right: auto;\\n    color: ${palette('grayscale', 0)};\\n  }\\n\\n  .isoContactList {\\n    width: 100%;\\n    display: flex;\\n    flex-direction: column;\\n    max-height: 100%;\\n    overflow: hidden;\\n    overflow-y: auto;\\n\\n    .contactListScrollbar {\\n      height: calc(100vh - 200px);\\n\\n      @media only screen and (max-width: 767px) {\\n        max-height: 60vh;\\n      }\\n    }\\n\\n    .isoSingleContact {\\n      width: 100%;\\n      margin: 0;\\n      display: flex;\\n      align-items: center;\\n      justify-content: flex-start;\\n      flex-shrink: 0;\\n      padding: 15px 20px;\\n      padding-right: ${props =>\\n        props['data-rtl'] === 'rtl' ? '20px' : '35px'};\\n      padding-left: ${props => (props['data-rtl'] === 'rtl' ? '35px' : '20px')};\\n      border-bottom: 1px solid ${palette('border', 0)};\\n      text-align: ${props => (props['data-rtl'] === 'rtl' ? 'right' : 'left')};\\n      position: relative;\\n      cursor: pointer;\\n\\n      &.active {\\n        background-color: ${palette('secondary', 1)};\\n      }\\n\\n      &:last-child {\\n        border-bottom: 0;\\n      }\\n\\n      .isoAvatar {\\n        width: 35px;\\n        height: 35px;\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n        margin-right: ${props =>\\n          props['data-rtl'] === 'rtl' ? 'inherit' : '15px'};\\n        margin-left: ${props =>\\n          props['data-rtl'] === 'rtl' ? '15px' : 'inherit'};\\n        flex-shrink: 0;\\n        overflow: hidden;\\n        ${borderRadius('50%')};\\n\\n        img {\\n          width: 100%;\\n          height: 100%;\\n          object-fit: cover;\\n        }\\n      }\\n\\n      .isoContactName {\\n        h3 {\\n          font-size: 15px;\\n        }\\n      }\\n\\n      .isoNoteText {\\n        width: calc(100% - 60px);\\n        margin-right: ${props =>\\n          props['data-rtl'] === 'rtl' ? 'inherit' : '20px'};\\n        margin-left: ${props =>\\n          props['data-rtl'] === 'rtl' ? '20px' : 'inherit'};\\n        padding: 20px 0;\\n        cursor: pointer;\\n\\n        h3 {\\n          width: 100%;\\n          white-space: nowrap;\\n          text-overflow: ellipsis;\\n          overflow: hidden;\\n          color: ${palette('secondary', 2)};\\n          font-weight: 500;\\n        }\\n\\n        .isoNoteCreatedDate {\\n          font-size: 13px;\\n          color: ${palette('grayscale', 0)};\\n        }\\n      }\\n\\n      .isoDeleteBtn {\\n        width: 24px;\\n        height: 24px;\\n        background-color: transparent;\\n        flex-shrink: 0;\\n        position: absolute;\\n        top: 20px;\\n        right: ${props => (props['data-rtl'] === 'rtl' ? 'inherit' : '5px')};\\n        left: ${props => (props['data-rtl'] === 'rtl' ? '5px' : 'inherit')};\\n        padding: 0;\\n        border: 0;\\n        font-size: 14px;\\n        color: ${palette('grayscale', 0)};\\n        ${transition()};\\n\\n        &:hover {\\n          color: ${palette('primary', 0)};\\n        }\\n      }\\n    }\\n\\n    .isoNotlistNotice {\\n      font-size: 14px;\\n      font-weight: 400;\\n      color: ${palette('grayscale', 0)};\\n      line-height: inherit;\\n      padding: 30px 0;\\n    }\\n  }\\n`;\\n\\nconst ContactListWrapper = WithDirection(WDContactListWrapper);\\n\\nexport { ContactListWrapper };\\n\",\"import React, { Component } from 'react';\\nimport IntlMessages from '../utility/intlMessages';\\nimport { InputSearch } from '../uielements/input';\\nimport DeleteButton from './deleteButton';\\nimport { PropTypes } from 'prop-types';\\nimport { ContactListWrapper } from './contactList.style';\\nimport Scrollbar from '../utility/customScrollBar';\\n\\nfunction filterContacts(contacts, search) {\\n  search = search.toUpperCase();\\n  return search\\n    ? contacts.filter(contact => contact.name.toUpperCase().includes(search))\\n    : contacts;\\n}\\n\\nexport default class ContactList extends Component {\\n  constructor(props) {\\n    super(props);\\n    this.singleContact = this.singleContact.bind(this);\\n    this.onChange = this.onChange.bind(this);\\n    this.state = {\\n      search: '',\\n    };\\n  }\\n  singleContact(contact) {\\n    const { seectedId, deleteContact, changeContact } = this.props;\\n    const activeClass = seectedId === contact.id ? 'active' : '';\\n    const onChange = () => changeContact(contact.id);\\n    return (\\n      <div\\n        key={contact.id}\\n        className={`${activeClass} isoSingleContact`}\\n        onClick={onChange}\\n      >\\n        <div className=\\\"isoAvatar\\\">\\n          {contact.avatar ? <img alt=\\\"#\\\" src={contact.avatar} /> : ''}\\n        </div>\\n        <div className=\\\"isoContactName\\\">\\n          <h3>{contact.name ? contact.name : 'No Name'}</h3>\\n        </div>\\n        <DeleteButton deleteContact={deleteContact} contact={contact} />\\n      </div>\\n    );\\n  }\\n  onChange(event) {\\n    this.setState({ search: event.target.value });\\n  }\\n  render() {\\n    const { search } = this.state;\\n    const contacts = filterContacts(this.props.contacts, search);\\n    return (\\n      <ContactListWrapper className=\\\"isoContactListWrapper\\\">\\n        <InputSearch\\n          placeholder={this.context.intl.formatMessage({\\n            id: 'contactlist.searchContacts',\\n          })}\\n          value={search}\\n          onChange={this.onChange}\\n          className=\\\"isoSearchBar\\\"\\n        />\\n        {contacts && contacts.length > 0 ? (\\n          <div className=\\\"isoContactList\\\">\\n            <Scrollbar className=\\\"contactListScrollbar\\\">\\n              {contacts.map(contact => this.singleContact(contact))}\\n            </Scrollbar>\\n          </div>\\n        ) : (\\n          <span className=\\\"isoNoResultMsg\\\">\\n            {<IntlMessages id=\\\"Component.contacts.noOption\\\" />}\\n          </span>\\n        )}\\n      </ContactListWrapper>\\n    );\\n  }\\n}\\n\\nContactList.contextTypes = {\\n  intl: PropTypes.object.isRequired,\\n};\\n\",\"import styled from 'styled-components';\\nimport { palette } from 'styled-theme';\\nimport { transition, borderRadius, boxShadow } from '../../settings/style-util';\\nimport WithDirection from '../../settings/withDirection';\\n\\nconst WDContactCardWrapper = styled.div`\\n  width: 100%;\\n  height: calc(100% - 145px);\\n  padding: 0 35px;\\n  display: -webkit-flex;\\n  display: -ms-flex;\\n  display: flex;\\n\\n  @media only screen and (max-width: 600px) {\\n    flex-direction: column;\\n  }\\n\\n  @media only screen and (max-width: 767px) {\\n    padding: 0 20px;\\n  }\\n\\n  @media only screen and (min-width: 767px) and (max-width: 990px) {\\n    flex-direction: column;\\n  }\\n\\n  .isoContactCardHead {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    width: 120px;\\n    flex-shrink: 0;\\n    margin-right: ${props =>\\n      props['data-rtl'] === 'rtl' ? 'inherit' : '50px'};\\n    margin-left: ${props => (props['data-rtl'] === 'rtl' ? '50px' : 'inherit')};\\n    flex-shrink: 0;\\n\\n    @media only screen and (max-width: 600px) {\\n      margin-bottom: 20px;\\n    }\\n\\n    @media only screen and (min-width: 767px) and (max-width: 990px) {\\n      margin-bottom: 20px;\\n    }\\n\\n    .isoPersonImage {\\n      width: 120px;\\n      height: 120px;\\n      display: flex;\\n      flex-shrink: 0;\\n      align-items: center;\\n      justify-content: center;\\n      margin-bottom: 10px;\\n      overflow: hidden;\\n      ${borderRadius('5px')};\\n\\n      .avatar-uploader {\\n        width: 100%;\\n        height: 100%;\\n      }\\n\\n      img {\\n        width: 100%;\\n        height: 100%;\\n        object-fit: cover;\\n      }\\n    }\\n\\n    .isoPersonName {\\n      font-size: 15px;\\n      font-weight: 500;\\n      color: ${palette('text', 0)};\\n      line-height: 1.5;\\n      margin: 0;\\n    }\\n  }\\n\\n  .isoContactInfoWrapper {\\n    width: 100%;\\n    display: flex;\\n    flex-direction: column;\\n\\n    @media only screen and (max-width: 767px) {\\n      padding: 20px 0;\\n    }\\n\\n    .isoContactCardInfos {\\n      width: 100%;\\n      display: flex;\\n      flex-shrink: 0;\\n      align-items: baseline;\\n      flex-direction: row;\\n      margin-bottom: 15px;\\n\\n      @media only screen and (max-width: 430px) {\\n        flex-direction: column;\\n        margin-bottom: 20px;\\n      }\\n\\n      .isoInfoLabel {\\n        font-size: 14px;\\n        font-weight: 500;\\n        color: ${palette('text', 0)};\\n        line-height: 1.5;\\n        margin: 0;\\n        margin-right: ${props =>\\n          props['data-rtl'] === 'rtl' ? 'inherit' : '15px'};\\n        margin-left: ${props =>\\n          props['data-rtl'] === 'rtl' ? '15px' : 'inherit'};\\n        text-align: ${props =>\\n          props['data-rtl'] === 'rtl' ? 'right' : 'left'};\\n        min-width: 80px;\\n        position: relative;\\n\\n        @media only screen and (max-width: 430px) {\\n          margin-bottom: 5px;\\n          margin-right: ${props =>\\n            props['data-rtl'] === 'rtl' ? 'inherit' : '0'};\\n          margin-left: ${props =>\\n            props['data-rtl'] === 'rtl' ? '0' : 'inherit'};\\n          padding-right: ${props =>\\n            props['data-rtl'] === 'rtl' ? 'inherit' : '10px'};\\n          padding-left: ${props =>\\n            props['data-rtl'] === 'rtl' ? '10px' : 'inherit'};\\n          min-width: 0;\\n        }\\n\\n        &::after {\\n          content: ':';\\n          position: absolute;\\n          right: ${props => (props['data-rtl'] === 'rtl' ? 'inherit' : '0')};\\n          left: ${props => (props['data-rtl'] === 'rtl' ? '0' : 'inherit')};\\n        }\\n      }\\n\\n      .isoInfoDetails {\\n        font-size: 14px;\\n        font-weight: 400;\\n        color: ${palette('text', 2)};\\n        line-height: 1.5;\\n        margin: 0;\\n        text-align: ${props =>\\n          props['data-rtl'] === 'rtl' ? 'right' : 'left'};\\n      }\\n\\n      input {\\n        font-size: 14px;\\n        font-weight: 400;\\n        color: ${palette('text', 2)};\\n        line-height: inherit;\\n        height: 36px;\\n        padding: 0 15px;\\n        margin: 0;\\n        border: 1px solid ${palette('border', 0)};\\n        outline: 0 !important;\\n        overflow: hidden;\\n        background-color: #ffffff;\\n        ${boxShadow('none')};\\n        ${borderRadius('3px')};\\n        ${transition()};\\n\\n        &:focus {\\n          border-color: ${palette('primary', 0)};\\n          ${boxShadow('0 0 0 2px rgba(68, 130, 255, 0.2)')};\\n          outline: 0;\\n        }\\n\\n        &:hover {\\n          border-color: ${palette('primary', 0)};\\n        }\\n\\n        &::-webkit-input-placeholder {\\n          color: ${palette('grayscale', 0)};\\n        }\\n\\n        &:-moz-placeholder {\\n          color: ${palette('grayscale', 0)};\\n        }\\n\\n        &::-moz-placeholder {\\n          color: ${palette('grayscale', 0)};\\n        }\\n        &:-ms-input-placeholder {\\n          color: ${palette('grayscale', 0)};\\n        }\\n      }\\n\\n      textarea {\\n        font-size: 14px;\\n        font-weight: 400;\\n        color: ${palette('text', 2)};\\n        line-height: 24px;\\n        height: 210px;\\n        padding: 10px 15px;\\n        margin: 0;\\n        border: 1px solid ${palette('border', 0)};\\n        outline: 0 !important;\\n        background-color: #ffffff;\\n        ${boxShadow('none')};\\n        ${borderRadius('3px')};\\n        ${transition()};\\n\\n        &:focus {\\n          border-color: ${palette('primary', 0)};\\n          ${boxShadow('0 0 0 2px rgba(68, 130, 255, 0.2)')};\\n          outline: 0;\\n        }\\n\\n        &:hover {\\n          border-color: ${palette('primary', 0)};\\n        }\\n\\n        &::-webkit-input-placeholder {\\n          color: ${palette('grayscale', 0)};\\n        }\\n\\n        &:-moz-placeholder {\\n          color: ${palette('grayscale', 0)};\\n        }\\n\\n        &::-moz-placeholder {\\n          color: ${palette('grayscale', 0)};\\n        }\\n        &:-ms-input-placeholder {\\n          color: ${palette('grayscale', 0)};\\n        }\\n      }\\n    }\\n  }\\n`;\\n\\nconst ContactCardWrapper = WithDirection(WDContactCardWrapper);\\n\\nexport { ContactCardWrapper };\\n\",\"import React, { Component } from 'react';\\nimport { ContactCardWrapper } from './contactCard.style';\\n\\nexport default class extends Component {\\n  render() {\\n    const { contact, otherAttributes } = this.props;\\n    const name = contact.name ? contact.name : 'No Name';\\n    const extraInfos = [];\\n    otherAttributes.forEach(attribute => {\\n      const value = contact[attribute.value];\\n      if (value) {\\n        extraInfos.push(\\n          <div className=\\\"isoContactCardInfos\\\" key={attribute.value}>\\n            <p className=\\\"isoInfoLabel\\\">{`${attribute.title}`}</p>\\n            <p className=\\\"isoInfoDetails\\\">{value}</p>\\n          </div>\\n        );\\n      }\\n    });\\n    return (\\n      <ContactCardWrapper className=\\\"isoContactCard\\\">\\n        <div className=\\\"isoContactCardHead\\\">\\n          <div className=\\\"isoPersonImage\\\">\\n            {contact.avatar ? <img alt=\\\"#\\\" src={contact.avatar} /> : ''}\\n          </div>\\n          <h1 className=\\\"isoPersonName\\\">{name}</h1>\\n        </div>\\n        <div className=\\\"isoContactInfoWrapper\\\">{extraInfos}</div>\\n      </ContactCardWrapper>\\n    );\\n  }\\n}\\n\",\"import React, { Component } from 'react';\\nimport { Icon } from 'antd';\\nimport Input, { Textarea } from '../uielements/input';\\nimport Upload from '../uielements/upload';\\nimport notification from '../notification';\\nimport { ContactCardWrapper } from './contactCard.style';\\nimport './upload.css';\\n\\nfunction beforeUpload(file) {\\n  const isJPG = file.type === 'image/jpeg';\\n  if (!isJPG) {\\n    notification('error', 'You can only upload JPG file!', '');\\n    return false;\\n  }\\n  const isLt2M = file.size / 1024 / 1024 < 2;\\n  if (!isLt2M) {\\n    notification('error', 'Image must smaller than 2MB!', '');\\n    return false;\\n  }\\n  notification('success', 'Image uploaded successfully!', '');\\n  return true;\\n}\\nexport default class extends Component {\\n  render() {\\n    const { contact, otherAttributes } = this.props;\\n    const name = contact.name ? contact.name : 'No Name';\\n    const extraInfos = [];\\n    const names = [\\n      { value: 'firstName', title: 'First Name' },\\n      { value: 'lastName', title: 'Last Name' }\\n    ];\\n    [...names, ...otherAttributes].forEach(attribute => {\\n      const value = contact[attribute.value];\\n      const editContact = event => {\\n        contact[attribute.value] = event.target.value;\\n        let name = '';\\n        if (contact.firstName) {\\n          name = `${contact.firstName} `;\\n        }\\n        if (contact.lastName) {\\n          name = `${name}${contact.lastName}`;\\n        }\\n        contact.name = name;\\n        this.props.editContact(contact);\\n      };\\n      if (attribute.value === 'note') {\\n        extraInfos.push(\\n          <div className=\\\"isoContactCardInfos\\\" key={attribute.value}>\\n            <p className=\\\"isoInfoLabel\\\">{`${attribute.title}`}</p>\\n            <Textarea\\n              placeholder={`${attribute.title}`}\\n              value={value}\\n              type=\\\"textarea\\\"\\n              rows={5}\\n              onChange={event => editContact(event)}\\n            />\\n          </div>\\n        );\\n      } else {\\n        extraInfos.push(\\n          <div className=\\\"isoContactCardInfos\\\" key={attribute.value}>\\n            <p className=\\\"isoInfoLabel\\\">{`${attribute.title}`}</p>\\n            <Input\\n              placeholder={`${attribute.title}`}\\n              value={value}\\n              onChange={event => editContact(event)}\\n            />\\n          </div>\\n        );\\n      }\\n    });\\n    return (\\n      <ContactCardWrapper className=\\\"isoContactCard\\\">\\n        <div className=\\\"isoContactCardHead\\\">\\n          <div className=\\\"isoPersonImage\\\">\\n            <Upload\\n              className=\\\"avatar-uploader\\\"\\n              name=\\\"avatar\\\"\\n              showUploadList={false}\\n              beforeUpload={beforeUpload}\\n              action=\\\"\\\"\\n            >\\n              {contact.avatar ? (\\n                <img src={contact.avatar} alt=\\\"\\\" className=\\\"avatar\\\" />\\n              ) : (\\n                ''\\n              )}\\n              <Icon type=\\\"plus\\\" className=\\\"avatar-uploader-trigger\\\" />\\n            </Upload>\\n          </div>\\n          <h1 className=\\\"isoPersonName\\\">{name}</h1>\\n        </div>\\n        <div className=\\\"isoContactInfoWrapper\\\">{extraInfos}</div>\\n      </ContactCardWrapper>\\n    );\\n  }\\n}\\n\",\"import styled from \\\"styled-components\\\";\\nimport { palette } from \\\"styled-theme\\\";\\nimport { transition, borderRadius } from \\\"../../settings/style-util\\\";\\nimport WithDirection from \\\"../../settings/withDirection\\\";\\n\\nconst WDContactsWrapper = styled.div`\\n  padding: 50px 35px;\\n  display: flex;\\n  ${\\\"\\\" /* max-height: calc(100vh - 130px); */} @media only screen and (max-width: 767px) {\\n    padding: 50px 20px;\\n    flex-direction: column;\\n    height: auto;\\n  }\\n\\n  @media only screen and (min-width: 767px) and (max-width: 990px) {\\n    padding: 40px 30px;\\n  }\\n\\n  .isoContactListBar {\\n    display: flex;\\n    flex-direction: column;\\n    flex-shrink: 0;\\n    background: #ffffff;\\n    border: 1px solid ${palette(\\\"border\\\", 0)};\\n    width: 320px;\\n    overflow: hidden;\\n    overflow-y: auto;\\n\\n    @media only screen and (max-width: 767px) {\\n      width: auto !important;\\n      margin-bottom: 20px;\\n      min-width: 0 !important;\\n      max-width: 100% !important;\\n      flex: 0 !important;\\n    }\\n\\n    @media only screen and (min-width: 767px) and (max-width: 990px) {\\n      width: 270px !important;\\n      flex: 0 0 270px !important;\\n    }\\n  }\\n\\n  .isoContactBoxWrapper {\\n    width: 100%;\\n    display: flex;\\n    justify-content: flex-start;\\n    background-color: #ffffff;\\n    border: 1px solid ${palette(\\\"border\\\", 0)};\\n    border-left: ${props => (props[\\\"data-rtl\\\"] === \\\"rtl\\\" ? \\\"inherit\\\" : \\\"0\\\")};\\n    border-right: ${props => (props[\\\"data-rtl\\\"] === \\\"rtl\\\" ? \\\"0\\\" : \\\"inherit\\\")};\\n    position: relative;\\n\\n    .isoContactBox {\\n      width: 100%;\\n      height: 100%;\\n    }\\n\\n    .contactBoxScrollbar {\\n      height: calc(100vh - 225px);\\n    }\\n\\n    .isoContactControl {\\n      width: 100%;\\n      display: flex;\\n      align-items: center;\\n      justify-content: flex-start;\\n      flex-shrink: 0;\\n      padding: 30px;\\n      background-color: #ffffff;\\n\\n      @media only screen and (max-width: 767px) {\\n        padding: 30px 20px;\\n      }\\n\\n      button:not(.isoAddContactBtn) {\\n        font-size: 16px;\\n        color: ${palette(\\\"secondary\\\", 0)};\\n        width: 35px;\\n        height: 35px;\\n        display: flex;\\n        align-items: center;\\n        text-align: center;\\n        justify-content: center;\\n        background-color: #ffffff;\\n        outline: 0;\\n        padding: 0;\\n        border: 1px solid ${palette(\\\"border\\\", 0)};\\n        margin-left: ${props =>\\n          props[\\\"data-rtl\\\"] === \\\"rtl\\\" ? \\\"inherit\\\" : \\\"-1px\\\"};\\n        margin-right: ${props =>\\n          props[\\\"data-rtl\\\"] === \\\"rtl\\\" ? \\\"-1px\\\" : \\\"inherit\\\"};\\n        cursor: pointer;\\n        ${borderRadius()};\\n        ${transition()};\\n\\n        i {\\n          width: 100%;\\n        }\\n\\n        span {\\n          display: none;\\n        }\\n\\n        &:first-child {\\n          margin-left: ${props =>\\n            props[\\\"data-rtl\\\"] === \\\"rtl\\\" ? \\\"inherit\\\" : \\\"0\\\"};\\n          margin-right: ${props =>\\n            props[\\\"data-rtl\\\"] === \\\"rtl\\\" ? \\\"0\\\" : \\\"inherit\\\"};\\n        }\\n\\n        &:hover {\\n          color: ${palette(\\\"primary\\\", 0)};\\n          background-color: ${palette(\\\"grayscale\\\", 7)};\\n        }\\n      }\\n\\n      .isoAddContactBtn {\\n        background-color: ${palette(\\\"primary\\\", 0)};\\n        border: 0;\\n        height: 30px;\\n        padding: 0 15px;\\n        margin-left: ${props =>\\n          props[\\\"data-rtl\\\"] === \\\"rtl\\\" ? \\\"inherit\\\" : \\\"auto\\\"};\\n        margin-right: ${props =>\\n          props[\\\"data-rtl\\\"] === \\\"rtl\\\" ? \\\"auto\\\" : \\\"inherit\\\"};\\n        ${borderRadius(\\\"3px\\\")};\\n        ${transition()};\\n\\n        span {\\n          font-size: 12px;\\n          font-weight: 400;\\n          padding: 0;\\n          text-transform: uppercase;\\n          color: #ffffff;\\n        }\\n\\n        &:hover {\\n          background-color: ${palette(\\\"primary\\\", 1)};\\n        }\\n      }\\n    }\\n  }\\n`;\\n\\nconst ContactsWrapper = WithDirection(WDContactsWrapper);\\n\\nexport { ContactsWrapper };\\n\",\"import React, { Component } from \\\"react\\\";\\nimport { connect } from \\\"react-redux\\\";\\nimport contactAction from \\\"../../redux/contacts/actions\\\";\\nimport { Layout, Icon } from \\\"antd\\\";\\nimport Button from \\\"../../components/uielements/button\\\";\\nimport ContactList from \\\"../../components/contacts/contactList\\\";\\nimport SingleContactView from \\\"../../components/contacts/singleView\\\";\\nimport EditContactView from \\\"../../components/contacts/editView\\\";\\nimport DeleteButton from \\\"../../components/contacts/deleteButton\\\";\\nimport { otherAttributes } from \\\"./fakeData\\\";\\nimport IntlMessages from \\\"../../components/utility/intlMessages\\\";\\nimport { ContactsWrapper } from \\\"./contacts.style\\\";\\nimport Scrollbar from \\\"../../components/utility/customScrollBar.js\\\";\\n\\nconst {\\n  changeContact,\\n  addContact,\\n  editContact,\\n  deleteContact,\\n  viewChange\\n} = contactAction;\\n\\nconst { Content } = Layout;\\nclass Contacts extends Component {\\n  render() {\\n    const {\\n      contacts,\\n      seectedId,\\n      editView,\\n      changeContact,\\n      addContact,\\n      editContact,\\n      deleteContact,\\n      viewChange\\n    } = this.props;\\n    const selectedContact = seectedId\\n      ? contacts.filter(contact => contact.id === seectedId)[0]\\n      : null;\\n    const onVIewChange = () => viewChange(!editView);\\n    return (\\n      <ContactsWrapper\\n        className=\\\"isomorphicContacts\\\"\\n        style={{ background: \\\"none\\\" }}\\n      >\\n        <div className=\\\"isoContactListBar\\\">\\n          <ContactList\\n            contacts={contacts}\\n            seectedId={seectedId}\\n            changeContact={changeContact}\\n            deleteContact={deleteContact}\\n          />\\n        </div>\\n        <Layout className=\\\"isoContactBoxWrapper\\\">\\n          {selectedContact ? (\\n            <Content className=\\\"isoContactBox\\\">\\n              <div className=\\\"isoContactControl\\\">\\n                <Button type=\\\"button\\\" onClick={onVIewChange}>\\n                  {editView ? <Icon type=\\\"check\\\" /> : <Icon type=\\\"edit\\\" />}{\\\" \\\"}\\n                </Button>\\n                <DeleteButton\\n                  deleteContact={deleteContact}\\n                  contact={selectedContact}\\n                />\\n                <Button\\n                  type=\\\"primary\\\"\\n                  onClick={addContact}\\n                  className=\\\"isoAddContactBtn\\\"\\n                >\\n                  <IntlMessages id=\\\"contactlist.addNewContact\\\" />\\n                </Button>\\n              </div>\\n\\n              <Scrollbar className=\\\"contactBoxScrollbar\\\">\\n                {editView ? (\\n                  <EditContactView\\n                    contact={selectedContact}\\n                    editContact={editContact}\\n                    otherAttributes={otherAttributes}\\n                  />\\n                ) : (\\n                  <SingleContactView\\n                    contact={selectedContact}\\n                    otherAttributes={otherAttributes}\\n                  />\\n                )}\\n              </Scrollbar>\\n            </Content>\\n          ) : (\\n            <div className=\\\"isoContactControl\\\">\\n              <Button\\n                type=\\\"primary\\\"\\n                onClick={addContact}\\n                className=\\\"isoAddContactBtn\\\"\\n              >\\n                <IntlMessages id=\\\"contactlist.addNewContact\\\" />\\n              </Button>\\n            </div>\\n          )}\\n        </Layout>\\n      </ContactsWrapper>\\n    );\\n  }\\n}\\n\\nfunction mapStateToProps(state) {\\n  const { contacts, seectedId, editView } = state.Contacts;\\n  return {\\n    contacts,\\n    seectedId,\\n    editView\\n  };\\n}\\nexport default connect(mapStateToProps, {\\n  changeContact,\\n  addContact,\\n  editContact,\\n  deleteContact,\\n  viewChange\\n})(Contacts);\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{1252:function(n,t,e){\"use strict\";var a=e(1820);t.a=a.a},2158:function(n,t,e){},2714:function(n,t,e){\"use strict\";e.r(t);var a=e(20),r=e(21),i=e(26),o=e(27),c=e(28),l=e(0),s=e.n(l),d=e(41),p=e(85),m=e(2720),h=e(32),f=e(171),u=e(24),x=e(29),b=e(103),g=e(364),j=e(197),v=function(n){function t(){return Object(a.a)(this,t),Object(i.a)(this,Object(o.a)(t).apply(this,arguments))}return Object(c.a)(t,n),Object(r.a)(t,[{key:\"render\",value:function(){var n=this.props,t=n.contact,e=n.deleteContact,a=\"\";return t.firstName&&(a=\"\".concat(t.firstName,\" \")),t.lastName&&(a=\"\".concat(a).concat(t.lastName)),a||(a=\"No Name\"),s.a.createElement(g.a,{title:\"Sure to delete \".concat(a,\"?\"),okText:\"DELETE\",cancelText:\"No\",onConfirm:function(){Object(j.a)(\"error\",\"\".concat(a,\" Deleted\"),\"\"),e(t.id)}},s.a.createElement(f.b,{icon:\"close\",type:\"button\",className:\"isoDeleteBtn\"}))}}]),t}(l.Component),O=e(1),y=e(37),C=e(30),w=e(7),N=e(16),E=e(45);function k(){var n=Object(y.a)([\"\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%;\\n\\n  .isoNoResultMsg {\\n    padding: 15px 20px;\\n    text-align: center;\\n    color: \",\";\\n    font-weight: 500;\\n    font-size: 14px;\\n  }\\n\\n  .isoSearchBar {\\n    .ant-input {\\n      width: 100%;\\n      font-size: 14px;\\n      font-weight: 400;\\n      color: \",\";\\n      line-height: inherit;\\n      height: 69px;\\n      padding: 0 20px;\\n      padding-left: \",\";\\n      padding-right: \",\";\\n      border: 0;\\n      border-bottom: 1px solid \",\";\\n      outline: 0 !important;\\n      overflow: hidden;\\n      background-color: #ffffff;\\n      \",\";\\n      \",\";\\n      \",\";\\n\\n      @media only screen and (max-width: 767px) {\\n        height: 50px;\\n      }\\n\\n      &:hover,\\n      &:focus {\\n        border-color: \",\" !important;\\n      }\\n\\n      &::-webkit-input-placeholder {\\n        color: \",\";\\n      }\\n\\n      &:-moz-placeholder {\\n        color: \",\";\\n      }\\n\\n      &::-moz-placeholder {\\n        color: \",\";\\n      }\\n      &:-ms-input-placeholder {\\n        color: \",\";\\n      }\\n    }\\n  }\\n\\n  .ant-input-suffix {\\n    left: 10px;\\n    right: auto;\\n    color: \",\";\\n  }\\n\\n  .isoContactList {\\n    width: 100%;\\n    display: flex;\\n    flex-direction: column;\\n    max-height: 100%;\\n    overflow: hidden;\\n    overflow-y: auto;\\n\\n    .contactListScrollbar {\\n      height: calc(100vh - 200px);\\n\\n      @media only screen and (max-width: 767px) {\\n        max-height: 60vh;\\n      }\\n    }\\n\\n    .isoSingleContact {\\n      width: 100%;\\n      margin: 0;\\n      display: flex;\\n      align-items: center;\\n      justify-content: flex-start;\\n      flex-shrink: 0;\\n      padding: 15px 20px;\\n      padding-right: \",\";\\n      padding-left: \",\";\\n      border-bottom: 1px solid \",\";\\n      text-align: \",\";\\n      position: relative;\\n      cursor: pointer;\\n\\n      &.active {\\n        background-color: \",\";\\n      }\\n\\n      &:last-child {\\n        border-bottom: 0;\\n      }\\n\\n      .isoAvatar {\\n        width: 35px;\\n        height: 35px;\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n        margin-right: \",\";\\n        margin-left: \",\";\\n        flex-shrink: 0;\\n        overflow: hidden;\\n        \",\";\\n\\n        img {\\n          width: 100%;\\n          height: 100%;\\n          object-fit: cover;\\n        }\\n      }\\n\\n      .isoContactName {\\n        h3 {\\n          font-size: 15px;\\n        }\\n      }\\n\\n      .isoNoteText {\\n        width: calc(100% - 60px);\\n        margin-right: \",\";\\n        margin-left: \",\";\\n        padding: 20px 0;\\n        cursor: pointer;\\n\\n        h3 {\\n          width: 100%;\\n          white-space: nowrap;\\n          text-overflow: ellipsis;\\n          overflow: hidden;\\n          color: \",\";\\n          font-weight: 500;\\n        }\\n\\n        .isoNoteCreatedDate {\\n          font-size: 13px;\\n          color: \",\";\\n        }\\n      }\\n\\n      .isoDeleteBtn {\\n        width: 24px;\\n        height: 24px;\\n        background-color: transparent;\\n        flex-shrink: 0;\\n        position: absolute;\\n        top: 20px;\\n        right: \",\";\\n        left: \",\";\\n        padding: 0;\\n        border: 0;\\n        font-size: 14px;\\n        color: \",\";\\n        \",\";\\n\\n        &:hover {\\n          color: \",\";\\n        }\\n      }\\n    }\\n\\n    .isoNotlistNotice {\\n      font-size: 14px;\\n      font-weight: 400;\\n      color: \",\";\\n      line-height: inherit;\\n      padding: 30px 0;\\n    }\\n  }\\n\"]);return k=function(){return n},n}var I=C.b.div(k(),Object(w.palette)(\"secondary\",2),Object(w.palette)(\"text\",0),function(n){return\"rtl\"===n[\"data-rtl\"]?\"inherit\":\"35px\"},function(n){return\"rtl\"===n[\"data-rtl\"]?\"35px\":\"inherit\"},Object(w.palette)(\"border\",0),Object(N.b)(\"none\"),Object(N.a)(),Object(N.c)(),Object(w.palette)(\"border\",0),Object(w.palette)(\"grayscale\",0),Object(w.palette)(\"grayscale\",0),Object(w.palette)(\"grayscale\",0),Object(w.palette)(\"grayscale\",0),Object(w.palette)(\"grayscale\",0),function(n){return\"rtl\"===n[\"data-rtl\"]?\"20px\":\"35px\"},function(n){return\"rtl\"===n[\"data-rtl\"]?\"35px\":\"20px\"},Object(w.palette)(\"border\",0),function(n){return\"rtl\"===n[\"data-rtl\"]?\"right\":\"left\"},Object(w.palette)(\"secondary\",1),function(n){return\"rtl\"===n[\"data-rtl\"]?\"inherit\":\"15px\"},function(n){return\"rtl\"===n[\"data-rtl\"]?\"15px\":\"inherit\"},Object(N.a)(\"50%\"),function(n){return\"rtl\"===n[\"data-rtl\"]?\"inherit\":\"20px\"},function(n){return\"rtl\"===n[\"data-rtl\"]?\"20px\":\"inherit\"},Object(w.palette)(\"secondary\",2),Object(w.palette)(\"grayscale\",0),function(n){return\"rtl\"===n[\"data-rtl\"]?\"inherit\":\"5px\"},function(n){return\"rtl\"===n[\"data-rtl\"]?\"5px\":\"inherit\"},Object(w.palette)(\"grayscale\",0),Object(N.c)(),Object(w.palette)(\"primary\",0),Object(w.palette)(\"grayscale\",0)),z=Object(E.a)(I),B=e(140);var L=function(n){function t(n){var e;return Object(a.a)(this,t),(e=Object(i.a)(this,Object(o.a)(t).call(this,n))).singleContact=e.singleContact.bind(Object(u.a)(Object(u.a)(e))),e.onChange=e.onChange.bind(Object(u.a)(Object(u.a)(e))),e.state={search:\"\"},e}return Object(c.a)(t,n),Object(r.a)(t,[{key:\"singleContact\",value:function(n){var t=this.props,e=t.seectedId,a=t.deleteContact,r=t.changeContact,i=e===n.id?\"active\":\"\";return s.a.createElement(\"div\",{key:n.id,className:\"\".concat(i,\" isoSingleContact\"),onClick:function(){return r(n.id)}},s.a.createElement(\"div\",{className:\"isoAvatar\"},n.avatar?s.a.createElement(\"img\",{alt:\"#\",src:n.avatar}):\"\"),s.a.createElement(\"div\",{className:\"isoContactName\"},s.a.createElement(\"h3\",null,n.name?n.name:\"No Name\")),s.a.createElement(v,{deleteContact:a,contact:n}))}},{key:\"onChange\",value:function(n){this.setState({search:n.target.value})}},{key:\"render\",value:function(){var n=this,t=this.state.search,e=function(n,t){return(t=t.toUpperCase())?n.filter(function(n){return n.name.toUpperCase().includes(t)}):n}(this.props.contacts,t);return s.a.createElement(z,{className:\"isoContactListWrapper\"},s.a.createElement(b.b,{placeholder:this.context.intl.formatMessage({id:\"contactlist.searchContacts\"}),value:t,onChange:this.onChange,className:\"isoSearchBar\"}),e&&e.length>0?s.a.createElement(\"div\",{className:\"isoContactList\"},s.a.createElement(B.a,{className:\"contactListScrollbar\"},e.map(function(t){return n.singleContact(t)}))):s.a.createElement(\"span\",{className:\"isoNoResultMsg\"},s.a.createElement(x.a,{id:\"Component.contacts.noOption\"})))}}]),t}(l.Component);function A(){var n=Object(y.a)([\"\\n  width: 100%;\\n  height: calc(100% - 145px);\\n  padding: 0 35px;\\n  display: -webkit-flex;\\n  display: -ms-flex;\\n  display: flex;\\n\\n  @media only screen and (max-width: 600px) {\\n    flex-direction: column;\\n  }\\n\\n  @media only screen and (max-width: 767px) {\\n    padding: 0 20px;\\n  }\\n\\n  @media only screen and (min-width: 767px) and (max-width: 990px) {\\n    flex-direction: column;\\n  }\\n\\n  .isoContactCardHead {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    width: 120px;\\n    flex-shrink: 0;\\n    margin-right: \",\";\\n    margin-left: \",\";\\n    flex-shrink: 0;\\n\\n    @media only screen and (max-width: 600px) {\\n      margin-bottom: 20px;\\n    }\\n\\n    @media only screen and (min-width: 767px) and (max-width: 990px) {\\n      margin-bottom: 20px;\\n    }\\n\\n    .isoPersonImage {\\n      width: 120px;\\n      height: 120px;\\n      display: flex;\\n      flex-shrink: 0;\\n      align-items: center;\\n      justify-content: center;\\n      margin-bottom: 10px;\\n      overflow: hidden;\\n      \",\";\\n\\n      .avatar-uploader {\\n        width: 100%;\\n        height: 100%;\\n      }\\n\\n      img {\\n        width: 100%;\\n        height: 100%;\\n        object-fit: cover;\\n      }\\n    }\\n\\n    .isoPersonName {\\n      font-size: 15px;\\n      font-weight: 500;\\n      color: \",\";\\n      line-height: 1.5;\\n      margin: 0;\\n    }\\n  }\\n\\n  .isoContactInfoWrapper {\\n    width: 100%;\\n    display: flex;\\n    flex-direction: column;\\n\\n    @media only screen and (max-width: 767px) {\\n      padding: 20px 0;\\n    }\\n\\n    .isoContactCardInfos {\\n      width: 100%;\\n      display: flex;\\n      flex-shrink: 0;\\n      align-items: baseline;\\n      flex-direction: row;\\n      margin-bottom: 15px;\\n\\n      @media only screen and (max-width: 430px) {\\n        flex-direction: column;\\n        margin-bottom: 20px;\\n      }\\n\\n      .isoInfoLabel {\\n        font-size: 14px;\\n        font-weight: 500;\\n        color: \",\";\\n        line-height: 1.5;\\n        margin: 0;\\n        margin-right: \",\";\\n        margin-left: \",\";\\n        text-align: \",\";\\n        min-width: 80px;\\n        position: relative;\\n\\n        @media only screen and (max-width: 430px) {\\n          margin-bottom: 5px;\\n          margin-right: \",\";\\n          margin-left: \",\";\\n          padding-right: \",\";\\n          padding-left: \",\";\\n          min-width: 0;\\n        }\\n\\n        &::after {\\n          content: ':';\\n          position: absolute;\\n          right: \",\";\\n          left: \",\";\\n        }\\n      }\\n\\n      .isoInfoDetails {\\n        font-size: 14px;\\n        font-weight: 400;\\n        color: \",\";\\n        line-height: 1.5;\\n        margin: 0;\\n        text-align: \",\";\\n      }\\n\\n      input {\\n        font-size: 14px;\\n        font-weight: 400;\\n        color: \",\";\\n        line-height: inherit;\\n        height: 36px;\\n        padding: 0 15px;\\n        margin: 0;\\n        border: 1px solid \",\";\\n        outline: 0 !important;\\n        overflow: hidden;\\n        background-color: #ffffff;\\n        \",\";\\n        \",\";\\n        \",\";\\n\\n        &:focus {\\n          border-color: \",\";\\n          \",\";\\n          outline: 0;\\n        }\\n\\n        &:hover {\\n          border-color: \",\";\\n        }\\n\\n        &::-webkit-input-placeholder {\\n          color: \",\";\\n        }\\n\\n        &:-moz-placeholder {\\n          color: \",\";\\n        }\\n\\n        &::-moz-placeholder {\\n          color: \",\";\\n        }\\n        &:-ms-input-placeholder {\\n          color: \",\";\\n        }\\n      }\\n\\n      textarea {\\n        font-size: 14px;\\n        font-weight: 400;\\n        color: \",\";\\n        line-height: 24px;\\n        height: 210px;\\n        padding: 10px 15px;\\n        margin: 0;\\n        border: 1px solid \",\";\\n        outline: 0 !important;\\n        background-color: #ffffff;\\n        \",\";\\n        \",\";\\n        \",\";\\n\\n        &:focus {\\n          border-color: \",\";\\n          \",\";\\n          outline: 0;\\n        }\\n\\n        &:hover {\\n          border-color: \",\";\\n        }\\n\\n        &::-webkit-input-placeholder {\\n          color: \",\";\\n        }\\n\\n        &:-moz-placeholder {\\n          color: \",\";\\n        }\\n\\n        &::-moz-placeholder {\\n          color: \",\";\\n        }\\n        &:-ms-input-placeholder {\\n          color: \",\";\\n        }\\n      }\\n    }\\n  }\\n\"]);return A=function(){return n},n}L.contextTypes={intl:O.PropTypes.object.isRequired};var S=C.b.div(A(),function(n){return\"rtl\"===n[\"data-rtl\"]?\"inherit\":\"50px\"},function(n){return\"rtl\"===n[\"data-rtl\"]?\"50px\":\"inherit\"},Object(N.a)(\"5px\"),Object(w.palette)(\"text\",0),Object(w.palette)(\"text\",0),function(n){return\"rtl\"===n[\"data-rtl\"]?\"inherit\":\"15px\"},function(n){return\"rtl\"===n[\"data-rtl\"]?\"15px\":\"inherit\"},function(n){return\"rtl\"===n[\"data-rtl\"]?\"right\":\"left\"},function(n){return\"rtl\"===n[\"data-rtl\"]?\"inherit\":\"0\"},function(n){return\"rtl\"===n[\"data-rtl\"]?\"0\":\"inherit\"},function(n){return\"rtl\"===n[\"data-rtl\"]?\"inherit\":\"10px\"},function(n){return\"rtl\"===n[\"data-rtl\"]?\"10px\":\"inherit\"},function(n){return\"rtl\"===n[\"data-rtl\"]?\"inherit\":\"0\"},function(n){return\"rtl\"===n[\"data-rtl\"]?\"0\":\"inherit\"},Object(w.palette)(\"text\",2),function(n){return\"rtl\"===n[\"data-rtl\"]?\"right\":\"left\"},Object(w.palette)(\"text\",2),Object(w.palette)(\"border\",0),Object(N.b)(\"none\"),Object(N.a)(\"3px\"),Object(N.c)(),Object(w.palette)(\"primary\",0),Object(N.b)(\"0 0 0 2px rgba(68, 130, 255, 0.2)\"),Object(w.palette)(\"primary\",0),Object(w.palette)(\"grayscale\",0),Object(w.palette)(\"grayscale\",0),Object(w.palette)(\"grayscale\",0),Object(w.palette)(\"grayscale\",0),Object(w.palette)(\"text\",2),Object(w.palette)(\"border\",0),Object(N.b)(\"none\"),Object(N.a)(\"3px\"),Object(N.c)(),Object(w.palette)(\"primary\",0),Object(N.b)(\"0 0 0 2px rgba(68, 130, 255, 0.2)\"),Object(w.palette)(\"primary\",0),Object(w.palette)(\"grayscale\",0),Object(w.palette)(\"grayscale\",0),Object(w.palette)(\"grayscale\",0),Object(w.palette)(\"grayscale\",0)),P=Object(E.a)(S),D=function(n){function t(){return Object(a.a)(this,t),Object(i.a)(this,Object(o.a)(t).apply(this,arguments))}return Object(c.a)(t,n),Object(r.a)(t,[{key:\"render\",value:function(){var n=this.props,t=n.contact,e=n.otherAttributes,a=t.name?t.name:\"No Name\",r=[];return e.forEach(function(n){var e=t[n.value];e&&r.push(s.a.createElement(\"div\",{className:\"isoContactCardInfos\",key:n.value},s.a.createElement(\"p\",{className:\"isoInfoLabel\"},\"\".concat(n.title)),s.a.createElement(\"p\",{className:\"isoInfoDetails\"},e)))}),s.a.createElement(P,{className:\"isoContactCard\"},s.a.createElement(\"div\",{className:\"isoContactCardHead\"},s.a.createElement(\"div\",{className:\"isoPersonImage\"},t.avatar?s.a.createElement(\"img\",{alt:\"#\",src:t.avatar}):\"\"),s.a.createElement(\"h1\",{className:\"isoPersonName\"},a)),s.a.createElement(\"div\",{className:\"isoContactInfoWrapper\"},r))}}]),t}(l.Component),T=e(65),W=e(1252);e(2158);function M(n){return\"image/jpeg\"===n.type?n.size/1024/1024<2?(Object(j.a)(\"success\",\"Image uploaded successfully!\",\"\"),!0):(Object(j.a)(\"error\",\"Image must smaller than 2MB!\",\"\"),!1):(Object(j.a)(\"error\",\"You can only upload JPG file!\",\"\"),!1)}var U=function(n){function t(){return Object(a.a)(this,t),Object(i.a)(this,Object(o.a)(t).apply(this,arguments))}return Object(c.a)(t,n),Object(r.a)(t,[{key:\"render\",value:function(){var n=this,t=this.props,e=t.contact,a=t.otherAttributes,r=e.name?e.name:\"No Name\",i=[];return[{value:\"firstName\",title:\"First Name\"},{value:\"lastName\",title:\"Last Name\"}].concat(Object(T.a)(a)).forEach(function(t){var a=e[t.value],r=function(a){e[t.value]=a.target.value;var r=\"\";e.firstName&&(r=\"\".concat(e.firstName,\" \")),e.lastName&&(r=\"\".concat(r).concat(e.lastName)),e.name=r,n.props.editContact(e)};\"note\"===t.value?i.push(s.a.createElement(\"div\",{className:\"isoContactCardInfos\",key:t.value},s.a.createElement(\"p\",{className:\"isoInfoLabel\"},\"\".concat(t.title)),s.a.createElement(b.c,{placeholder:\"\".concat(t.title),value:a,type:\"textarea\",rows:5,onChange:function(n){return r(n)}}))):i.push(s.a.createElement(\"div\",{className:\"isoContactCardInfos\",key:t.value},s.a.createElement(\"p\",{className:\"isoInfoLabel\"},\"\".concat(t.title)),s.a.createElement(b.d,{placeholder:\"\".concat(t.title),value:a,onChange:function(n){return r(n)}})))}),s.a.createElement(P,{className:\"isoContactCard\"},s.a.createElement(\"div\",{className:\"isoContactCardHead\"},s.a.createElement(\"div\",{className:\"isoPersonImage\"},s.a.createElement(W.a,{className:\"avatar-uploader\",name:\"avatar\",showUploadList:!1,beforeUpload:M,action:\"\"},e.avatar?s.a.createElement(\"img\",{src:e.avatar,alt:\"\",className:\"avatar\"}):\"\",s.a.createElement(h.a,{type:\"plus\",className:\"avatar-uploader-trigger\"}))),s.a.createElement(\"h1\",{className:\"isoPersonName\"},r)),s.a.createElement(\"div\",{className:\"isoContactInfoWrapper\"},i))}}]),t}(l.Component),H=e(385);function J(){var n=Object(y.a)([\"\\n  padding: 50px 35px;\\n  display: flex;\\n  \",\" @media only screen and (max-width: 767px) {\\n    padding: 50px 20px;\\n    flex-direction: column;\\n    height: auto;\\n  }\\n\\n  @media only screen and (min-width: 767px) and (max-width: 990px) {\\n    padding: 40px 30px;\\n  }\\n\\n  .isoContactListBar {\\n    display: flex;\\n    flex-direction: column;\\n    flex-shrink: 0;\\n    background: #ffffff;\\n    border: 1px solid \",\";\\n    width: 320px;\\n    overflow: hidden;\\n    overflow-y: auto;\\n\\n    @media only screen and (max-width: 767px) {\\n      width: auto !important;\\n      margin-bottom: 20px;\\n      min-width: 0 !important;\\n      max-width: 100% !important;\\n      flex: 0 !important;\\n    }\\n\\n    @media only screen and (min-width: 767px) and (max-width: 990px) {\\n      width: 270px !important;\\n      flex: 0 0 270px !important;\\n    }\\n  }\\n\\n  .isoContactBoxWrapper {\\n    width: 100%;\\n    display: flex;\\n    justify-content: flex-start;\\n    background-color: #ffffff;\\n    border: 1px solid \",\";\\n    border-left: \",\";\\n    border-right: \",\";\\n    position: relative;\\n\\n    .isoContactBox {\\n      width: 100%;\\n      height: 100%;\\n    }\\n\\n    .contactBoxScrollbar {\\n      height: calc(100vh - 225px);\\n    }\\n\\n    .isoContactControl {\\n      width: 100%;\\n      display: flex;\\n      align-items: center;\\n      justify-content: flex-start;\\n      flex-shrink: 0;\\n      padding: 30px;\\n      background-color: #ffffff;\\n\\n      @media only screen and (max-width: 767px) {\\n        padding: 30px 20px;\\n      }\\n\\n      button:not(.isoAddContactBtn) {\\n        font-size: 16px;\\n        color: \",\";\\n        width: 35px;\\n        height: 35px;\\n        display: flex;\\n        align-items: center;\\n        text-align: center;\\n        justify-content: center;\\n        background-color: #ffffff;\\n        outline: 0;\\n        padding: 0;\\n        border: 1px solid \",\";\\n        margin-left: \",\";\\n        margin-right: \",\";\\n        cursor: pointer;\\n        \",\";\\n        \",\";\\n\\n        i {\\n          width: 100%;\\n        }\\n\\n        span {\\n          display: none;\\n        }\\n\\n        &:first-child {\\n          margin-left: \",\";\\n          margin-right: \",\";\\n        }\\n\\n        &:hover {\\n          color: \",\";\\n          background-color: \",\";\\n        }\\n      }\\n\\n      .isoAddContactBtn {\\n        background-color: \",\";\\n        border: 0;\\n        height: 30px;\\n        padding: 0 15px;\\n        margin-left: \",\";\\n        margin-right: \",\";\\n        \",\";\\n        \",\";\\n\\n        span {\\n          font-size: 12px;\\n          font-weight: 400;\\n          padding: 0;\\n          text-transform: uppercase;\\n          color: #ffffff;\\n        }\\n\\n        &:hover {\\n          background-color: \",\";\\n        }\\n      }\\n    }\\n  }\\n\"]);return J=function(){return n},n}var R=C.b.div(J(),\"\",Object(w.palette)(\"border\",0),Object(w.palette)(\"border\",0),function(n){return\"rtl\"===n[\"data-rtl\"]?\"inherit\":\"0\"},function(n){return\"rtl\"===n[\"data-rtl\"]?\"0\":\"inherit\"},Object(w.palette)(\"secondary\",0),Object(w.palette)(\"border\",0),function(n){return\"rtl\"===n[\"data-rtl\"]?\"inherit\":\"-1px\"},function(n){return\"rtl\"===n[\"data-rtl\"]?\"-1px\":\"inherit\"},Object(N.a)(),Object(N.c)(),function(n){return\"rtl\"===n[\"data-rtl\"]?\"inherit\":\"0\"},function(n){return\"rtl\"===n[\"data-rtl\"]?\"0\":\"inherit\"},Object(w.palette)(\"primary\",0),Object(w.palette)(\"grayscale\",7),Object(w.palette)(\"primary\",0),function(n){return\"rtl\"===n[\"data-rtl\"]?\"inherit\":\"auto\"},function(n){return\"rtl\"===n[\"data-rtl\"]?\"auto\":\"inherit\"},Object(N.a)(\"3px\"),Object(N.c)(),Object(w.palette)(\"primary\",1)),V=Object(E.a)(R),q=p.a.changeContact,F=p.a.addContact,G=p.a.editContact,Y=p.a.deleteContact,K=p.a.viewChange,Q=m.a.Content,X=function(n){function t(){return Object(a.a)(this,t),Object(i.a)(this,Object(o.a)(t).apply(this,arguments))}return Object(c.a)(t,n),Object(r.a)(t,[{key:\"render\",value:function(){var n=this.props,t=n.contacts,e=n.seectedId,a=n.editView,r=n.changeContact,i=n.addContact,o=n.editContact,c=n.deleteContact,l=n.viewChange,d=e?t.filter(function(n){return n.id===e})[0]:null;return s.a.createElement(V,{className:\"isomorphicContacts\",style:{background:\"none\"}},s.a.createElement(\"div\",{className:\"isoContactListBar\"},s.a.createElement(L,{contacts:t,seectedId:e,changeContact:r,deleteContact:c})),s.a.createElement(m.a,{className:\"isoContactBoxWrapper\"},d?s.a.createElement(Q,{className:\"isoContactBox\"},s.a.createElement(\"div\",{className:\"isoContactControl\"},s.a.createElement(f.b,{type:\"button\",onClick:function(){return l(!a)}},a?s.a.createElement(h.a,{type:\"check\"}):s.a.createElement(h.a,{type:\"edit\"}),\" \"),s.a.createElement(v,{deleteContact:c,contact:d}),s.a.createElement(f.b,{type:\"primary\",onClick:i,className:\"isoAddContactBtn\"},s.a.createElement(x.a,{id:\"contactlist.addNewContact\"}))),s.a.createElement(B.a,{className:\"contactBoxScrollbar\"},a?s.a.createElement(U,{contact:d,editContact:o,otherAttributes:H.b}):s.a.createElement(D,{contact:d,otherAttributes:H.b}))):s.a.createElement(\"div\",{className:\"isoContactControl\"},s.a.createElement(f.b,{type:\"primary\",onClick:i,className:\"isoAddContactBtn\"},s.a.createElement(x.a,{id:\"contactlist.addNewContact\"})))))}}]),t}(l.Component);t.default=Object(d.b)(function(n){var t=n.Contacts;return{contacts:t.contacts,seectedId:t.seectedId,editView:t.editView}},{changeContact:q,addContact:F,editContact:G,deleteContact:Y,viewChange:K})(X)}}]);","extractedComments":[]}